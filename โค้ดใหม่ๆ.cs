เข้าใจแล้วครับ คุณต้องการเพิ่มฟีเจอร์สำหรับคลาส `สินค้า` โดยเฉพาะ โดยยึดตามโครงสร้างที่คุณให้มา

นี่คือ 30 ฟีเจอร์เพิ่มเติมสำหรับคลาส `สินค้า` พร้อมการปรับโครงสร้างและโค้ดตัวอย่างการนำไปใช้ครับ

---

## 30 ฟีเจอร์สำหรับคลาส `สินค้า`

ฟีเจอร์เหล่านี้จะช่วยให้ข้อมูลสินค้าของคุณละเอียดและมีความสามารถในการจัดการที่หลากหลายมากขึ้น:

### การปรับปรุงคลาส `สินค้า`

เราจะเพิ่มคุณสมบัติ (Properties) เข้าไปในคลาส `สินค้า` เพื่อรองรับฟีเจอร์ใหม่ๆ:

```csharp
using System;
using System.Collections.Generic; // ต้องมี using นี้สำหรับ List

public class สินค้า
{
    public string รหัสสินค้า { get; set; }
    public string ชื่อสินค้า { get; set; }
    public decimal ราคาต่อหน่วย { get; set; }
    public int จำนวนคงเหลือ { get; set; }
    public string หน่วยนับ { get; set; } // ข้อ 19
    public DateTime วันหมดอายุ { get; set; } // ข้อ 30
    public decimal ราคาพิเศษสมาชิก { get; set; } // ข้อ 22
    public string หมวดหมู่ { get; set; } // ข้อ 18
    public decimal อัตราภาษี { get; set; } // ข้อ 49

    // --- ฟีเจอร์ใหม่ 30 ข้อ (เริ่มต้นที่ 181) ---

    // 181. บาร์โค้ดสินค้า (รองรับหลายบาร์โค้ด)
    public List<string> บาร์โค้ดรายการ { get; set; }

    // 182. สถานะสินค้า (เช่น Active, Inactive, Discontinued)
    public string สถานะสินค้า { get; set; }

    // 183. จุดสั่งซื้อ (Reorder Point) - จำนวนขั้นต่ำที่ควรมีก่อนสั่งซื้อเพิ่ม
    public int จุดสั่งซื้อ { get; set; }

    // 184. จำนวนสต็อกสูงสุด (Maximum Stock Level)
    public int สต็อกสูงสุด { get; set; }

    // 185. ต้นทุนสินค้าเฉลี่ย หรือ ต้นทุนมาตรฐาน
    public decimal ต้นทุนสินค้า { get; set; }

    // 186. ผู้จัดหาสินค้าหลัก
    public string รหัสผู้จัดหาหลัก { get; set; }

    // 187. รูปภาพสินค้า (เก็บ URL หรือ Path)
    public string รูปภาพสินค้าURL { get; set; }

    // 188. รายละเอียดสินค้าแบบยาว
    public string คำอธิบายสินค้า { get; set; }

    // 189. แท็กสินค้าสำหรับค้นหา
    public List<string> แท็กสินค้า { get; set; }

    // 190. ประเภทสินค้า (เช่น สินค้าสำเร็จรูป, วัตถุดิบ, บริการ)
    public string ประเภทสินค้า { get; set; }

    // 191. ระบุว่าต้องมีการชั่งน้ำหนักหรือไม่
    public bool ต้องชั่งน้ำหนัก { get; set; }

    // 192. จำนวนขั้นต่ำในการขาย (Minimum Order Quantity)
    public int จำนวนขั้นต่ำในการขาย { get; set; }

    // 193. จำนวนการขายทีละชุด (เช่น ขายแพ็คละ 6 ชิ้น)
    public int จำนวนขายต่อชุด { get; set; }

    // 194. สินค้ามีตัวเลือก (เช่น สี, ขนาด)
    public bool มีตัวเลือก { get; set; }
    public List<ตัวเลือกสินค้า> รายการตัวเลือก { get; set; }

    // 195. วันที่นำเข้า/สร้างสินค้า
    public DateTime วันที่สร้างสินค้า { get; set; }

    // 196. วันที่ปรับปรุงข้อมูลล่าสุด
    public DateTime วันที่ปรับปรุงล่าสุด { get; set; }

    // 197. ผู้ใช้ที่สร้าง/ปรับปรุงข้อมูลล่าสุด
    public string ผู้ใช้ที่แก้ไขล่าสุด { get; set; }

    // 198. รหัสหมวดหมู่ย่อย (สำหรับหมวดหมู่แบบลำดับชั้น)
    public string รหัสหมวดหมู่ย่อย { get; set; }

    // 199. แบรนด์สินค้า
    public string แบรนด์ { get; set; }

    // 200. การคิดภาษี (ใช่/ไม่ใช่)
    public bool ต้องคิดภาษี { get; set; }

    // 201. ราคาขายส่ง/ราคาตามจำนวน (ถ้ามี)
    public List<ราคาตามจำนวน> ราคาขายส่ง { get; set; }

    // 202. สินค้าบริการ (ไม่มีสต็อก, ไม่ต้องจัดการคลัง)
    public bool เป็นสินค้าบริการ { get; set; }

    // 203. ตำแหน่งที่เก็บในคลัง (เช่น A1-01-01)
    public string ตำแหน่งที่เก็บ { get; set; }

    // 204. รหัสสินค้าภายใน (Internal SKU)
    public string รหัสสินค้าภายใน { get; set; }

    // 205. สินค้าคงคลังแบบ Batch/Lot (สำหรับสินค้าที่มี Lot Number, วันที่ผลิต)
    public bool จัดการสต็อกแบบล็อต { get; set; }

    // 206. ค่าธรรมเนียมพิเศษสำหรับสินค้า (เช่น ค่าบริการติดตั้ง)
    public decimal ค่าธรรมเนียมพิเศษ { get; set; }

    // 207. สินค้า Bundled/Set (สินค้าที่รวมกันหลายชิ้น)
    public bool เป็นชุดสินค้า { get; set; }
    public List<สินค้าในชุด> รายการสินค้าในชุด { get; set; }

    // 208. หน่วยย่อยสำหรับการขาย (เช่น แพ็ค > ชิ้น)
    public string หน่วยย่อย { get; set; }
    public decimal จำนวนในหน่วยย่อย { get; set; } // เช่น 1 แพ็ค มี 6 ชิ้น

    // 209. ระดับความเสี่ยงในการหมดอายุ (High, Medium, Low)
    public string ระดับความเสี่ยงหมดอายุ { get; set; }

    // 210. กำไรที่คาดหวัง (Margin)
    public decimal กำไรที่คาดหวัง { get; set; } // เป็นเปอร์เซ็นต์ หรือจำนวนเงินก็ได้

    // Constructor (ไม่บังคับ แต่ช่วยในการสร้าง object)
    public สินค้า()
    {
        บาร์โค้ดรายการ = new List<string>();
        แท็กสินค้า = new List<string>();
        รายการตัวเลือก = new List<ตัวเลือกสินค้า>();
        ราคาขายส่ง = new List<ราคาตามจำนวน>();
        รายการสินค้าในชุด = new List<สินค้าในชุด>();
        วันที่สร้างสินค้า = DateTime.Now;
        วันที่ปรับปรุงล่าสุด = DateTime.Now;
        สถานะสินค้า = "Active"; // ค่าเริ่มต้น
        ประเภทสินค้า = "สินค้าสำเร็จรูป"; // ค่าเริ่มต้น
        ต้องคิดภาษี = true; // ค่าเริ่มต้น
        เป็นสินค้าบริการ = false; // ค่าเริ่มต้น
        ต้องชั่งน้ำหนัก = false; // ค่าเริ่มต้น
        จัดการสต็อกแบบล็อต = false; // ค่าเริ่มต้น
        เป็นชุดสินค้า = false; // ค่าเริ่มต้น
    }

    // เมธอดสำหรับฟีเจอร์เพิ่มเติม (ตัวอย่าง)
    public void เพิ่มบาร์โค้ด(string บาร์โค้ดใหม่)
    {
        if (!บาร์โค้ดรายการ.Contains(บาร์โค้ดใหม่))
        {
            บาร์โค้ดรายการ.Add(บาร์โค้ดใหม่);
        }
    }

    public void อัพเดทสต็อก(int จำนวน)
    {
        จำนวนคงเหลือ += จำนวน;
        วันที่ปรับปรุงล่าสุด = DateTime.Now;
    }

    public decimal คำนวณกำไรต่อหน่วย()
    {
        return ราคาต่อหน่วย - ต้นทุนสินค้า;
    }

    public decimal คำนวณกำไรเปอร์เซ็นต์()
    {
        if (ต้นทุนสินค้า > 0)
        {
            return ((ราคาต่อหน่วย - ต้นทุนสินค้า) / ต้นทุนสินค้า) * 100;
        }
        return 0;
    }
}

// คลาสเสริมสำหรับฟีเจอร์ใหม่
public class ตัวเลือกสินค้า // สำหรับข้อ 194
{
    public string ชื่อตัวเลือก { get; set; } // เช่น "สี", "ขนาด"
    public List<string> ค่าตัวเลือก { get; set; } // เช่น ["แดง", "เขียว"], ["S", "M", "L"]
    // อาจเพิ่ม Dictionary<string, int> สต็อกตามตัวเลือก เพื่อจัดการสต็อกย่อย
    // หรือ Dictionary<string, decimal> ราคาเพิ่มลดตามตัวเลือก
}

public class ราคาตามจำนวน // สำหรับข้อ 201
{
    public int จำนวนเริ่มต้น { get; set; }
    public int จำนวนสิ้นสุด { get; set; } // ถ้าเป็น 0 หรือ MaxValue คือไม่จำกัด
    public decimal ราคาพิเศษ { get; set; }
}

public class สินค้าในชุด // สำหรับข้อ 207
{
    public string รหัสสินค้าในชุด { get; set; }
    public int จำนวน { get; set; }
}
```

---

### คำอธิบายฟีเจอร์ใหม่ 30 ข้อสำหรับ `สินค้า`

1.  **181. บาร์โค้ดสินค้า (รองรับหลายบาร์โค้ด)**:
    * **คุณสมบัติ:** `public List<string> บาร์โค้ดรายการ { get; set; }`
    * **การใช้งาน:** สินค้า 1 ชิ้นอาจมีบาร์โค้ดได้หลายอัน (เช่น บาร์โค้ดของ Supplier, บาร์โค้ดภายใน, QR Code)

2.  **182. สถานะสินค้า (เช่น Active, Inactive, Discontinued)**:
    * **คุณสมบัติ:** `public string สถานะสินค้า { get; set; }`
    * **การใช้งาน:** ควบคุมว่าสินค้าสามารถขายได้หรือไม่ หรืออยู่ระหว่างการเลิกผลิต

3.  **183. จุดสั่งซื้อ (Reorder Point)**:
    * **คุณสมบัติ:** `public int จุดสั่งซื้อ { get; set; }`
    * **การใช้งาน:** ระบุจำนวนสต็อกขั้นต่ำที่หากถึงจุดนี้แล้ว ควรทำการสั่งซื้อเพิ่ม

4.  **184. จำนวนสต็อกสูงสุด (Maximum Stock Level)**:
    * **คุณสมบัติ:** `public int สต็อกสูงสุด { get; set; }`
    * **การใช้งาน:** ระบุจำนวนสต็อกที่เหมาะสมที่สุด เพื่อไม่ให้มีของมากเกินไป (Overstock)

5.  **185. ต้นทุนสินค้า (Average Cost / Standard Cost)**:
    * **คุณสมบัติ:** `public decimal ต้นทุนสินค้า { get; set; }`
    * **การใช้งาน:** ใช้ในการคำนวณกำไร และประเมินมูลค่าสินค้าคงคลัง

6.  **186. ผู้จัดหาสินค้าหลัก**:
    * **คุณสมบัติ:** `public string รหัสผู้จัดหาหลัก { get; set; }`
    * **การใช้งาน:** ระบุว่าสินค้านี้ปกติแล้วสั่งซื้อจากผู้จัดหารายใด

7.  **187. รูปภาพสินค้า (เก็บ URL หรือ Path)**:
    * **คุณสมบัติ:** `public string รูปภาพสินค้าURL { get; set; }`
    * **การใช้งาน:** สำหรับแสดงผลในหน้า POS, E-commerce หรือรายงาน

8.  **188. รายละเอียดสินค้าแบบยาว**:
    * **คุณสมบัติ:** `public string คำอธิบายสินค้า { get; set; }`
    * **การใช้งาน:** ให้ข้อมูลสินค้าเพิ่มเติม เช่น คุณสมบัติเด่น, วิธีการใช้งาน

9.  **189. แท็กสินค้าสำหรับค้นหา**:
    * **คุณสมบัติ:** `public List<string> แท็กสินค้า { get; set; }`
    * **การใช้งาน:** ช่วยในการค้นหาสินค้าด้วยคำสำคัญต่างๆ (เช่น "โปรโมชั่น", "สินค้าใหม่", "ขายดี")

10. **190. ประเภทสินค้า (เช่น สินค้าสำเร็จรูป, วัตถุดิบ, บริการ)**:
    * **คุณสมบัติ:** `public string ประเภทสินค้า { get; set; }`
    * **การใช้งาน:** แยกประเภทการจัดการสต็อกและบัญชี

11. **191. ระบุว่าต้องมีการชั่งน้ำหนักหรือไม่**:
    * **คุณสมบัติ:** `public bool ต้องชั่งน้ำหนัก { get; set; }`
    * **การใช้งาน:** สำหรับสินค้าที่ขายเป็นน้ำหนัก เช่น ผักผลไม้ เนื้อสัตว์

12. **192. จำนวนขั้นต่ำในการขาย (Minimum Order Quantity)**:
    * **คุณสมบัติ:** `public int จำนวนขั้นต่ำในการขาย { get; set; }`
    * **การใช้งาน:** กำหนดว่าต้องขายสินค้านี้อย่างน้อยกี่ชิ้นต่อหนึ่งรายการ

13. **193. จำนวนการขายทีละชุด (เช่น ขายแพ็คละ 6 ชิ้น)**:
    * **คุณสมบัติ:** `public int จำนวนขายต่อชุด { get; set; }`
    * **การใช้งาน:** สำหรับสินค้าที่ต้องขายเป็นชุด เช่น "ไข่ไก่ 1 แผง (30 ฟอง)"

14. **194. สินค้ามีตัวเลือก (เช่น สี, ขนาด)**:
    * **คุณสมบัติ:** `public bool มีตัวเลือก { get; set; }` และ `public List<ตัวเลือกสินค้า> รายการตัวเลือก { get; set; }`
    * **การใช้งาน:** สินค้าหลัก 1 รายการแต่มีคุณลักษณะย่อยๆ ที่แตกต่างกัน (เช่น เสื้อยืดสีแดง, เสื้อยืดสีน้ำเงิน)

15. **195. วันที่นำเข้า/สร้างสินค้า**:
    * **คุณสมบัติ:** `public DateTime วันที่สร้างสินค้า { get; set; }`
    * **การใช้งาน:** ติดตามเวลาที่สินค้าถูกเพิ่มเข้าสู่ระบบ

16. **196. วันที่ปรับปรุงข้อมูลล่าสุด**:
    * **คุณสมบัติ:** `public DateTime วันที่ปรับปรุงล่าสุด { get; set; }`
    * **การใช้งาน:** ติดตามการเปลี่ยนแปลงข้อมูลสินค้า

17. **197. ผู้ใช้ที่สร้าง/ปรับปรุงข้อมูลล่าสุด**:
    * **คุณสมบัติ:** `public string ผู้ใช้ที่แก้ไขล่าสุด { get; set; }`
    * **การใช้งาน:** ติดตามว่าใครเป็นผู้ปรับปรุงข้อมูลสินค้าล่าสุด (Audit Trail)

18. **198. รหัสหมวดหมู่ย่อย (สำหรับหมวดหมู่แบบลำดับชั้น)**:
    * **คุณสมบัติ:** `public string รหัสหมวดหมู่ย่อย { get; set; }`
    * **การใช้งาน:** จัดหมวดหมู่สินค้าให้ละเอียดขึ้น เช่น "อาหาร" > "ขนม" > "คุกกี้"

19. **199. แบรนด์สินค้า**:
    * **คุณสมบัติ:** `public string แบรนด์ { get; set; }`
    * **การใช้งาน:** สำหรับการจัดกลุ่มสินค้าตามแบรนด์, รายงาน หรือการตลาด

20. **200. การคิดภาษี (ใช่/ไม่ใช่)**:
    * **คุณสมบัติ:** `public bool ต้องคิดภาษี { get; set; }`
    * **การใช้งาน:** ควบคุมว่าสินค้านี้ต้องถูกนำไปคำนวณภาษีมูลค่าเพิ่มหรือไม่

21. **201. ราคาขายส่ง/ราคาตามจำนวน (ถ้ามี)**:
    * **คุณสมบัติ:** `public List<ราคาตามจำนวน> ราคาขายส่ง { get; set; }`
    * **การใช้งาน:** กำหนดราคาที่ถูกลงเมื่อซื้อในปริมาณมาก เช่น ซื้อ 1-5 ชิ้น ราคา X, ซื้อ 6-10 ชิ้น ราคา Y

22. **202. สินค้าบริการ (ไม่มีสต็อก, ไม่ต้องจัดการคลัง)**:
    * **คุณสมบัติ:** `public bool เป็นสินค้าบริการ { get; set; }`
    * **การใช้งาน:** สำหรับการขายบริการ เช่น ค่าส่ง, ค่าติดตั้ง, ค่าซ่อม

23. **203. ตำแหน่งที่เก็บในคลัง (Warehouse Location)**:
    * **คุณสมบัติ:** `public string ตำแหน่งที่เก็บ { get; set; }`
    * **การใช้งาน:** ระบุตำแหน่งของสินค้าในคลังสินค้าเพื่อความสะดวกในการจัดเก็บและค้นหา

24. **204. รหัสสินค้าภายใน (Internal SKU)**:
    * **คุณสมบัติ:** `public string รหัสสินค้าภายใน { get; set; }`
    * **การใช้งาน:** รหัสสินค้าที่ใช้ภายในองค์กร อาจแตกต่างจากบาร์โค้ดภายนอก

25. **205. สินค้าคงคลังแบบ Batch/Lot (สำหรับสินค้าที่มี Lot Number, วันที่ผลิต)**:
    * **คุณสมบัติ:** `public bool จัดการสต็อกแบบล็อต { get; set; }`
    * **การใช้งาน:** สำหรับสินค้าที่ต้องการการติดตามย้อนหลัง (Traceability) เช่น ยา, อาหาร

26. **206. ค่าธรรมเนียมพิเศษสำหรับสินค้า (เช่น ค่าบริการติดตั้ง)**:
    * **คุณสมบัติ:** `public decimal ค่าธรรมเนียมพิเศษ { get; set; }`
    * **การใช้งาน:** ค่าใช้จ่ายเพิ่มเติมที่เกี่ยวข้องกับสินค้านั้นๆ

27. **207. สินค้า Bundled/Set (สินค้าที่รวมกันหลายชิ้น)**:
    * **คุณสมบัติ:** `public bool เป็นชุดสินค้า { get; set; }` และ `public List<สินค้าในชุด> รายการสินค้าในชุด { get; set; }`
    * **การใช้งาน:** สำหรับการขายสินค้าเป็นชุด เช่น "ชุดของขวัญ" ที่ประกอบด้วยสินค้าหลายชิ้น

28. **208. หน่วยย่อยสำหรับการขาย (เช่น แพ็ค > ชิ้น)**:
    * **คุณสมบัติ:** `public string หน่วยย่อย { get; set; }` และ `public decimal จำนวนในหน่วยย่อย { get; set; }`
    * **การใช้งาน:** กำหนดหน่วยที่เล็กกว่าหน่วยนับหลัก เพื่อให้สามารถขายหรือแสดงผลละเอียดขึ้น

29. **209. ระดับความเสี่ยงในการหมดอายุ (High, Medium, Low)**:
    * **คุณสมบัติ:** `public string ระดับความเสี่ยงหมดอายุ { get; set; }`
    * **การใช้งาน:** ช่วยในการบริหารจัดการสินค้าคงคลังที่มีวันหมดอายุ เพื่อลดสินค้าเสียหาย

30. **210. กำไรที่คาดหวัง (Margin)**:
    * **คุณสมบัติ:** `public decimal กำไรที่คาดหวัง { get; set; }`
    * **การใช้งาน:** สามารถใช้เป็นเปอร์เซ็นต์หรือจำนวนเงิน เพื่อตั้งเป้าหมายกำไรต่อสินค้า

---

ฟีเจอร์เหล่านี้จะช่วยให้คลาส `สินค้า` ของคุณมีความยืดหยุ่นและรองรับความต้องการทางธุรกิจได้มากขึ้นครับ หากคุณต้องการให้ผมขยายความในส่วนใดเพิ่มเติม แจ้งได้เลยนะครับ!